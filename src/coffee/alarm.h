/*****************************************************************************
* Model: coffeeAo.qm
* File:  src\coffee/alarm.h
*
* This code has been generated by QM tool (see state-machine.com/qm).
* DO NOT EDIT THIS FILE MANUALLY. All your changes will be lost.
*
* This program is open source software: you can redistribute it and/or
* modify it under the terms of the GNU General Public License as published
* by the Free Software Foundation.
*
* This program is distributed in the hope that it will be useful, but
* WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
* or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
* for more details.
*****************************************************************************/
/* @(/3/3) .................................................................*/
#ifndef _CLOCK_H
#define _CLOCK_H

#include "qp_port.h"
#include <stdio.h>
#include "rtc.h"

#define MAX(x, y) (((x) > (y)) ? (x) : (y))
#define MIN(x, y) (((x) < (y)) ? (x) : (y))

enum AlarmClockSignals {
    TICK_SIG = Q_USER_SIG,                               /* time tick event */
    ALARM_SET_SIG,                                         /* set the alarm */
    ALARM_SIG,  /* alarm event from Alarm component to AlarmClock container */
    ALARM_TOGGLE_SIG,

    TIME_SIG,           /* time event sent to Alarm (contains current time) */
    TIME_SET_SIG,
    GO_COFFEE_POT_TOGGLE_SIG,
    GO_TIME_BREW_TOGGLE_SIG,
    GO_SET_BREW_TIME_CLOCK_SIG,
    GO_SET_TIME_OF_DAY_SIG,
    GO_START_BREWING_SIG,
    GO_SET_BREW_STRENGTH_SIG,
    GO_BACK_SIG,
    ADWHEEL_SIG,
    INT_SIG,
    BREW_SIG
};

typedef struct HourAndMinuteTag {
    uint8_t hours;
    uint8_t minutes;
} HourAndMinute;

extern QActive *APP_alarmClock;

/* @(/1/1) .................................................................*/
typedef struct SetEvtTag {
/* protected: */
    QEvt super;

/* public: */
    uint8_t digit;
} SetEvt;

/* @(/1/0) .................................................................*/
typedef struct RtcEvtTag {
/* protected: */
    QEvt super;

/* public: */
    RTC_T rtc;
} RtcEvt;

/* @(/1/2) .................................................................*/
typedef struct AdEvtTag {
/* protected: */
    QEvt super;

/* public: */
    uint16_t val;
} AdEvt;

/* @(/2/1) .................................................................*/
typedef struct AlarmTag {
/* protected: */
    QHsm super;

/* public: */
    HourAndMinute alarm_time;
    HourAndMinute current_time;
    RTC_T real_current_time;
} Alarm;

/* protected: */
QState Alarm_initial(Alarm * const me, QEvt const * const e);
QState Alarm_normal(Alarm * const me, QEvt const * const e);
QState Alarm_alarm_off(Alarm * const me, QEvt const * const e);
QState Alarm_alarm_on(Alarm * const me, QEvt const * const e);

/*
$declare(StateMachines::Alarm)
$declare(StateMachines::Alarm_ctor)
*/

#define Alarm_init(me_)           QFsm_init    ((QFsm *)(me_), (QEvent *)0)
#define Alarm_dispatch(me_, e_)   QFsm_dispatch((QFsm *)(me_), e_)

#endif
