/*****************************************************************************
* Model: coffeeAo.qm
* File:  src\coffee/coffee.h
*
* This code has been generated by QM tool (see state-machine.com/qm).
* DO NOT EDIT THIS FILE MANUALLY. All your changes will be lost.
*
* This program is open source software: you can redistribute it and/or
* modify it under the terms of the GNU General Public License as published
* by the Free Software Foundation.
*
* This program is distributed in the hope that it will be useful, but
* WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
* or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
* for more details.
*****************************************************************************/
/* @(/3/1) .................................................................*/
#ifndef _COFFEE_H_
#define _COFFEE_H_

#include "stdio.h"
#include "qp_port.h"
#include "qmbsp.h"
#include "alarm.h"

enum InterpolateWith {
    NOTHING,
    IS_COFFEE_POT_IN_MACHINE,
    IS_AUTOMATIC_BREW_ACTIVE,
    BREW_STRENGTH
};

struct Entry {
    enum AlarmClockSignals signal;
    unsigned const char* menu_label;
    enum InterpolateWith interpolate_with;
};

/* @(/2/0) .................................................................*/
typedef struct CoffeeAOTag {
/* protected: */
    QActive super;

/* public: */
    uint32_t current_time;
    Alarm alarm;
    QTimeEvt timeEvt;
    uint8_t current_menu_index;
    uint8_t max_menu_index;
    uint8_t current_brew_strength;
    uint8_t is_coffee_pot_in_machine;
    uint8_t is_automatic_brew_active;
} CoffeeAO;

/* protected: */
QState CoffeeAO_initial(CoffeeAO * const me, QEvt const * const e);
QState CoffeeAO_coffeemachine(CoffeeAO * const me, QEvt const * const e);
QState CoffeeAO_menu(CoffeeAO * const me, QEvt const * const e);
QState CoffeeAO_submenu(CoffeeAO * const me, QEvt const * const e);
QState CoffeeAO_setBrewStrength(CoffeeAO * const me, QEvt const * const e);
QState CoffeeAO_startBrewingNow(CoffeeAO * const me, QEvt const * const e);
QState CoffeeAO_timeBrewActivatedToggle(CoffeeAO * const me, QEvt const * const e);
QState CoffeeAO_set_brew_h1(CoffeeAO * const me, QEvt const * const e);
QState CoffeeAO_set_clock_h1(CoffeeAO * const me, QEvt const * const e);
QState CoffeeAO_set_clock_h2(CoffeeAO * const me, QEvt const * const e);
QState CoffeeAO_set_clock_m1(CoffeeAO * const me, QEvt const * const e);
QState CoffeeAO_set_clock_m2(CoffeeAO * const me, QEvt const * const e);
QState CoffeeAO_set_brew_h2(CoffeeAO * const me, QEvt const * const e);
QState CoffeeAO_set_brew_m1(CoffeeAO * const me, QEvt const * const e);
QState CoffeeAO_set_brew_m2(CoffeeAO * const me, QEvt const * const e);
QState CoffeeAO_coffeePotToggle(CoffeeAO * const me, QEvt const * const e);

/* @(/2/2) .................................................................*/
void CoffeeAO_ctor(CoffeeAO* me);

#endif
