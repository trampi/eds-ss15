; generated by Component: ARM Compiler 5.04 update 1 (build 49) Tool: ArmCC [5040049]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\qmp_put.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\qmp_put.d --apcs=interwork -O0 --diag_suppress=9931 -I.\bombqmbsp -I..\..\..\..\..\..\..\CPU_Platforms\ARM\ARM7\MCB2300\include -I..\..\..\..\..\..\..\Framewworks\Quantum\qpc_5.3.1\qpc\ports\arm7\Keil -I..\..\..\..\..\..\..\Framewworks\Quantum\qpc_5.3.1\qpc\include -I.\src -I.\src\coffee -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\Philips -D__MICROLIB -DQM_TICK -DQM_ActiveObject --omf_browse=.\obj\qmp_put.crf ..\..\..\..\..\..\..\Framewworks\Quantum\qpc_5.3.1\qpc\qf\source\qmp_put.c]
                          ARM

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  QMPool_put PROC
;;;69     */
;;;70     void QMPool_put(QMPool * const me, void *b) {
000000  e92d4070          PUSH     {r4-r6,lr}
000004  e1a04000          MOV      r4,r0
000008  e1a05001          MOV      r5,r1
;;;71         QF_CRIT_STAT_
;;;72     
;;;73         /** \pre # free blocks cannot exceed the total # blocks and
;;;74         * the block pointer must be from this pool.
;;;75         */
;;;76         Q_REQUIRE_ID(100, (me->nFree < me->nTot)
00000c  e1d401b0          LDRH     r0,[r4,#0x10]
000010  e1d410be          LDRH     r1,[r4,#0xe]
000014  e1500001          CMP      r0,r1
000018  aa000006          BGE      |L1.56|
00001c  e5940004          LDR      r0,[r4,#4]
000020  e1500005          CMP      r0,r5
000024  8a000003          BHI      |L1.56|
000028  e5940008          LDR      r0,[r4,#8]
00002c  e1500005          CMP      r0,r5
000030  3a000000          BCC      |L1.56|
000034  ea000002          B        |L1.68|
                  |L1.56|
000038  e3a01064          MOV      r1,#0x64
00003c  e59f002c          LDR      r0,|L1.112|
000040  ebfffffe          BL       Q_onAssert
                  |L1.68|
;;;77                           && QF_PTR_RANGE_(b, me->start, me->end));
;;;78     
;;;79         QF_CRIT_ENTRY_();
000044  ef0000fe          SVC      #0xfe
;;;80         ((QFreeBlock *)b)->next = (QFreeBlock *)me->free_head;/* link into list */
000048  e5940000          LDR      r0,[r4,#0]
00004c  e5850000          STR      r0,[r5,#0]
;;;81         me->free_head = b;      /* set as new head of the free list */
000050  e5845000          STR      r5,[r4,#0]
;;;82         ++me->nFree;            /* one more free block in this pool */
000054  e1d401b0          LDRH     r0,[r4,#0x10]
000058  e2800001          ADD      r0,r0,#1
00005c  e3c00801          BIC      r0,r0,#0x10000
000060  e1c401b0          STRH     r0,[r4,#0x10]
;;;83     
;;;84         QS_BEGIN_NOCRIT_(QS_QF_MPOOL_PUT, QS_priv_.mpObjFilter, me->start)
;;;85             QS_TIME_();         /* timestamp */
;;;86             QS_OBJ_(me->start); /* the memory managed by this pool */
;;;87             QS_MPC_(me->nFree); /* the number of free blocks in the pool */
;;;88         QS_END_NOCRIT_()
;;;89     
;;;90         QF_CRIT_EXIT_();
000064  ef0000ff          SVC      #0xff
;;;91     }
000068  e8bd4070          POP      {r4-r6,lr}
00006c  e12fff1e          BX       lr
                          ENDP

                  |L1.112|
                          DCD      Q_this_module_

                          AREA ||.constdata||, DATA, READONLY, ALIGN=0

                  Q_this_module_
000000  716d705f          DCB      0x71,0x6d,0x70,0x5f
000004  70757400          DCB      0x70,0x75,0x74,0x00
