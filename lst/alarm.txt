; generated by Component: ARM Compiler 5.04 update 1 (build 49) Tool: ArmCC [5040049]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\alarm.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\alarm.d --apcs=interwork -O0 --diag_suppress=9931 -I.\bombqmbsp -I..\..\..\..\..\..\..\CPU_Platforms\ARM\ARM7\MCB2300\include -I..\..\..\..\..\..\..\Framewworks\Quantum\qpc_5.3.1\qpc\ports\arm7\Keil -I..\..\..\..\..\..\..\Framewworks\Quantum\qpc_5.3.1\qpc\include -I.\src -I.\src\coffee -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\Philips -D__MICROLIB -DQM_TICK -DQM_ActiveObject --omf_browse=.\obj\alarm.crf src\coffee\alarm.c]
                          ARM

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_sizespec
                          REQUIRE _printf_percent
                          REQUIRE _printf_flags
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                  Alarm_on PROC
                  |L1.0|
;;;87     /* @(/2/1/3/2) .............................................................*/
;;;88     QState Alarm_on(Alarm * const me, QEvt const * const e) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  e1a05000          MOV      r5,r0
000008  e1a06001          MOV      r6,r1
;;;89         QState status_;
;;;90         switch (e->sig) {
00000c  e1d600b0          LDRH     r0,[r6,#0]
000010  e3500001          CMP      r0,#1
000014  0a000006          BEQ      |L1.52|
000018  e3500005          CMP      r0,#5
00001c  0a000015          BEQ      |L1.120|
000020  e3500007          CMP      r0,#7
000024  0a00001a          BEQ      |L1.148|
000028  e350000b          CMP      r0,#0xb
00002c  1a000037          BNE      |L1.272|
000030  ea00001c          B        |L1.168|
                  |L1.52|
;;;91             /* @(/2/1/3/2) */
;;;92             case Q_ENTRY_SIG: {
000034  e1a00000          MOV      r0,r0
;;;93                 printf("*** Alarm ON %02ld:%02ld\n",
000038  e1d501b0          LDRH     r0,[r5,#0x10]
00003c  e3a0103c          MOV      r1,#0x3c
000040  ebfffffe          BL       __aeabi_idivmod
000044  e1a07001          MOV      r7,r1
000048  e1d501b0          LDRH     r0,[r5,#0x10]
00004c  e3a0103c          MOV      r1,#0x3c
000050  ebfffffe          BL       __aeabi_idivmod
000054  e1a08000          MOV      r8,r0
000058  e1a02007          MOV      r2,r7
00005c  e1a01008          MOV      r1,r8
000060  e28f0fa7          ADR      r0,|L1.772|
000064  ebfffffe          BL       __2printf
;;;94                                    me->alarm_time/60, me->alarm_time%60);
;;;95                             fflush(stdout);
000068  e59f02b0          LDR      r0,|L1.800|
00006c  ebfffffe          BL       fflush
;;;96                 status_ = Q_HANDLED();
000070  e3a04003          MOV      r4,#3
;;;97                 break;
000074  ea000028          B        |L1.284|
                  |L1.120|
;;;98             }
;;;99             /* @(/2/1/3/2/0) */
;;;100            case ALARM_SET_SIG: {
000078  e1a00000          MOV      r0,r0
;;;101                printf("*** Cannot set Alarm when it is ON\n");
00007c  e28f0e2a          ADR      r0,|L1.804|
000080  ebfffffe          BL       __2printf
;;;102                fflush(stdout);
000084  e59f0294          LDR      r0,|L1.800|
000088  ebfffffe          BL       fflush
;;;103                status_ = Q_HANDLED();
00008c  e3a04003          MOV      r4,#3
;;;104                break;
000090  ea000021          B        |L1.284|
                  |L1.148|
;;;105            }
;;;106            /* @(/2/1/3/2/1) */
;;;107            case ALARM_OFF_SIG: {
000094  e1a00000          MOV      r0,r0
;;;108                status_ = Q_TRAN(&Alarm_off);
000098  e59f02a8          LDR      r0,|L1.840|
00009c  e5850008          STR      r0,[r5,#8]
0000a0  e3a04008          MOV      r4,#8
;;;109                break;
0000a4  ea00001c          B        |L1.284|
                  |L1.168|
;;;110            }
;;;111            /* @(/2/1/3/2/2) */
;;;112            case TIME_SIG: {
0000a8  e1a00000          MOV      r0,r0
;;;113                /* @(/2/1/3/2/2/0) */
;;;114                if (((TimeEvt *)e)->current_time == me->alarm_time) {
0000ac  e5d60004          LDRB     r0,[r6,#4]
0000b0  e1d511b0          LDRH     r1,[r5,#0x10]
0000b4  e1500001          CMP      r0,r1
0000b8  1a000012          BNE      |L1.264|
;;;115                    printf("ALARM!!!\n");
0000bc  e28f0fa2          ADR      r0,|L1.844|
0000c0  ebfffffe          BL       __2printf
;;;116                    /* asynchronously post the event to the container AO */
;;;117                    QActive_postFIFO(APP_alarmClock, Q_NEW(QEvent, ALARM_SIG));
0000c4  e3a02008          MOV      r2,#8
0000c8  e3a01000          MOV      r1,#0
0000cc  e3a00004          MOV      r0,#4
0000d0  ebfffffe          BL       QF_newX_
0000d4  e1a07000          MOV      r7,r0
0000d8  e59f0278          LDR      r0,|L1.856|
0000dc  e5900000          LDR      r0,[r0,#0]  ; APP_alarmClock
0000e0  e5900000          LDR      r0,[r0,#0]
0000e4  e3a02000          MOV      r2,#0
0000e8  e1a01007          MOV      r1,r7
0000ec  e590300c          LDR      r3,[r0,#0xc]
0000f0  e59f0260          LDR      r0,|L1.856|
0000f4  e5900000          LDR      r0,[r0,#0]  ; APP_alarmClock
0000f8  e1a0e00f          MOV      lr,pc
0000fc  e12fff13          BX       r3
;;;118                    status_ = Q_HANDLED();
000100  e3a04003          MOV      r4,#3
000104  ea000000          B        |L1.268|
                  |L1.264|
;;;119                }
;;;120                else {
;;;121                    status_ = Q_UNHANDLED();
000108  e3a04002          MOV      r4,#2
                  |L1.268|
;;;122                }
;;;123                break;
00010c  ea000002          B        |L1.284|
                  |L1.272|
;;;124            }
;;;125            default: {
000110  e1a00000          MOV      r0,r0
;;;126                status_ = Q_IGNORED();
000114  e3a04004          MOV      r4,#4
;;;127                break;
000118  e1a00000          MOV      r0,r0
                  |L1.284|
00011c  e1a00000          MOV      r0,r0                 ;97
;;;128            }
;;;129        }
;;;130        return status_;
000120  e1a00004          MOV      r0,r4
000124  e8bd41f0          POP      {r4-r8,lr}
;;;131    }
000128  e12fff1e          BX       lr
;;;132    
                          ENDP

                  Alarm_off PROC
                  |L1.300|
;;;33     /* @(/2/1/3/1) .............................................................*/
;;;34     QState Alarm_off(Alarm * const me, QEvt const * const e) {
00012c  e92d41f0          PUSH     {r4-r8,lr}
000130  e1a04000          MOV      r4,r0
000134  e1a06001          MOV      r6,r1
;;;35         QState status_;
;;;36         switch (e->sig) {
000138  e1d600b0          LDRH     r0,[r6,#0]
00013c  e3500001          CMP      r0,#1
000140  0a000006          BEQ      |L1.352|
000144  e3500002          CMP      r0,#2
000148  0a000020          BEQ      |L1.464|
00014c  e3500005          CMP      r0,#5
000150  0a00004c          BEQ      |L1.648|
000154  e3500006          CMP      r0,#6
000158  1a000062          BNE      |L1.744|
00015c  ea000028          B        |L1.516|
                  |L1.352|
;;;37             /* @(/2/1/3/1) */
;;;38             case Q_ENTRY_SIG: {
000160  e1a00000          MOV      r0,r0
;;;39                  /* while in the off state, the alarm is kept in decimal format */
;;;40                 me->alarm_time = (me->alarm_time/60)*100 + me->alarm_time%60;
000164  e1d401b0          LDRH     r0,[r4,#0x10]
000168  e3a0103c          MOV      r1,#0x3c
00016c  ebfffffe          BL       __aeabi_idivmod
000170  e1a07001          MOV      r7,r1
000174  e1d401b0          LDRH     r0,[r4,#0x10]
000178  e3a0103c          MOV      r1,#0x3c
00017c  ebfffffe          BL       __aeabi_idivmod
000180  e0801180          ADD      r1,r0,r0,LSL #3
000184  e0810200          ADD      r0,r1,r0,LSL #4
000188  e0870100          ADD      r0,r7,r0,LSL #2
00018c  e1c401b0          STRH     r0,[r4,#0x10]
;;;41                 printf("*** Alarm OFF %02ld:%02ld\n",
000190  e1d401b0          LDRH     r0,[r4,#0x10]
000194  e3a01064          MOV      r1,#0x64
000198  ebfffffe          BL       __aeabi_idivmod
00019c  e1a07001          MOV      r7,r1
0001a0  e1d401b0          LDRH     r0,[r4,#0x10]
0001a4  e3a01064          MOV      r1,#0x64
0001a8  ebfffffe          BL       __aeabi_idivmod
0001ac  e1a08000          MOV      r8,r0
0001b0  e1a02007          MOV      r2,r7
0001b4  e1a01008          MOV      r1,r8
0001b8  e28f0f67          ADR      r0,|L1.860|
0001bc  ebfffffe          BL       __2printf
;;;42                     me->alarm_time/100, me->alarm_time%100);
;;;43                 fflush(stdout);
0001c0  e59f0158          LDR      r0,|L1.800|
0001c4  ebfffffe          BL       fflush
;;;44                 status_ = Q_HANDLED();
0001c8  e3a05003          MOV      r5,#3
;;;45                 break;
0001cc  ea000048          B        |L1.756|
                  |L1.464|
;;;46             }
;;;47             /* @(/2/1/3/1) */
;;;48             case Q_EXIT_SIG: {
0001d0  e1a00000          MOV      r0,r0
;;;49                           /* upon exit, the alarm is converted to binary format */
;;;50                             me->alarm_time = (me->alarm_time/100)*60 + me->alarm_time%100;
0001d4  e1d401b0          LDRH     r0,[r4,#0x10]
0001d8  e3a01064          MOV      r1,#0x64
0001dc  ebfffffe          BL       __aeabi_idivmod
0001e0  e1a07001          MOV      r7,r1
0001e4  e1d401b0          LDRH     r0,[r4,#0x10]
0001e8  e3a01064          MOV      r1,#0x64
0001ec  ebfffffe          BL       __aeabi_idivmod
0001f0  e0600200          RSB      r0,r0,r0,LSL #4
0001f4  e0870100          ADD      r0,r7,r0,LSL #2
0001f8  e1c401b0          STRH     r0,[r4,#0x10]
;;;51                 status_ = Q_HANDLED();
0001fc  e3a05003          MOV      r5,#3
;;;52                 break;
000200  ea00003b          B        |L1.756|
                  |L1.516|
;;;53             }
;;;54             /* @(/2/1/3/1/0) */
;;;55             case ALARM_ON_SIG: {
000204  e1a00000          MOV      r0,r0
;;;56                 /* @(/2/1/3/1/0/0) */
;;;57                 if ((me->alarm_time / 100 < 24) && (me->alarm_time % 100 < 60)) {
000208  e1d401b0          LDRH     r0,[r4,#0x10]
00020c  e3a01064          MOV      r1,#0x64
000210  ebfffffe          BL       __aeabi_idivmod
000214  e3500018          CMP      r0,#0x18
000218  aa000008          BGE      |L1.576|
00021c  e1d401b0          LDRH     r0,[r4,#0x10]
000220  e3a01064          MOV      r1,#0x64
000224  ebfffffe          BL       __aeabi_idivmod
000228  e351003c          CMP      r1,#0x3c
00022c  aa000003          BGE      |L1.576|
;;;58                     status_ = Q_TRAN(&Alarm_on);
000230  e24f0f8e          ADR      r0,|L1.0|
000234  e5840008          STR      r0,[r4,#8]
000238  e3a05008          MOV      r5,#8
00023c  ea000010          B        |L1.644|
                  |L1.576|
;;;59                 }
;;;60                 /* @(/2/1/3/1/0/1) */
;;;61                 else {
;;;62                     me->alarm_time = 0;
000240  e3a00000          MOV      r0,#0
000244  e1c401b0          STRH     r0,[r4,#0x10]
;;;63                     printf("*** Alarm reset %02ld:%02ld\n",
000248  e1d401b0          LDRH     r0,[r4,#0x10]
00024c  e3a01064          MOV      r1,#0x64
000250  ebfffffe          BL       __aeabi_idivmod
000254  e1a07001          MOV      r7,r1
000258  e1d401b0          LDRH     r0,[r4,#0x10]
00025c  e3a01064          MOV      r1,#0x64
000260  ebfffffe          BL       __aeabi_idivmod
000264  e1a08000          MOV      r8,r0
000268  e1a02007          MOV      r2,r7
00026c  e1a01008          MOV      r1,r8
000270  e28f0c01          ADR      r0,|L1.888|
000274  ebfffffe          BL       __2printf
;;;64                            me->alarm_time/100, me->alarm_time%100);
;;;65                     status_ = Q_TRAN(&Alarm_off);
000278  e24f0f55          ADR      r0,|L1.300|
00027c  e5840008          STR      r0,[r4,#8]
000280  e3a05008          MOV      r5,#8
                  |L1.644|
;;;66                 }
;;;67                 break;
000284  ea00001a          B        |L1.756|
                  |L1.648|
;;;68             }
;;;69             /* @(/2/1/3/1/1) */
;;;70             case ALARM_SET_SIG: {
000288  e1a00000          MOV      r0,r0
;;;71                           /* while setting, the alarm is kept in decimal format */
;;;72                             me->alarm_time = (10 * me->alarm_time
00028c  e5d61004          LDRB     r1,[r6,#4]
000290  e1d421b0          LDRH     r2,[r4,#0x10]
000294  e3a0300a          MOV      r3,#0xa
000298  e0201293          MLA      r0,r3,r2,r1
00029c  e59f10f4          LDR      r1,|L1.920|
0002a0  ebfffffe          BL       __aeabi_idivmod
0002a4  e1c411b0          STRH     r1,[r4,#0x10]
;;;73                                               + ((SetEvt const *)e)->digit) % 10000;
;;;74                             printf("*** Alarm SET %02ld:%02ld\n",
0002a8  e1d401b0          LDRH     r0,[r4,#0x10]
0002ac  e3a01064          MOV      r1,#0x64
0002b0  ebfffffe          BL       __aeabi_idivmod
0002b4  e1a07001          MOV      r7,r1
0002b8  e1d401b0          LDRH     r0,[r4,#0x10]
0002bc  e3a01064          MOV      r1,#0x64
0002c0  ebfffffe          BL       __aeabi_idivmod
0002c4  e1a08000          MOV      r8,r0
0002c8  e1a02007          MOV      r2,r7
0002cc  e1a01008          MOV      r1,r8
0002d0  e28f00c4          ADR      r0,|L1.924|
0002d4  ebfffffe          BL       __2printf
;;;75                                    me->alarm_time/100, me->alarm_time%100);
;;;76                             fflush(stdout);
0002d8  e59f0040          LDR      r0,|L1.800|
0002dc  ebfffffe          BL       fflush
;;;77                 status_ = Q_HANDLED();
0002e0  e3a05003          MOV      r5,#3
;;;78                 break;
0002e4  ea000002          B        |L1.756|
                  |L1.744|
;;;79             }
;;;80             default: {
0002e8  e1a00000          MOV      r0,r0
;;;81                 status_ = Q_IGNORED();
0002ec  e3a05004          MOV      r5,#4
;;;82                 break;
0002f0  e1a00000          MOV      r0,r0
                  |L1.756|
0002f4  e1a00000          MOV      r0,r0                 ;45
;;;83             }
;;;84         }
;;;85         return status_;
0002f8  e1a00005          MOV      r0,r5
0002fc  e8bd41f0          POP      {r4-r8,lr}
;;;86     }
000300  e12fff1e          BX       lr
                  |L1.772|
000304  2a2a2a20          DCB      "*** Alarm ON %02ld:%02ld\n",0
000308  416c6172
00030c  6d204f4e
000310  20253032
000314  6c643a25
000318  30326c64
00031c  0a00    
00031e  00                DCB      0
00031f  00                DCB      0
                  |L1.800|
                          DCD      __stdout
                  |L1.804|
000324  2a2a2a20          DCB      "*** Cannot set Alarm when it is ON\n",0
000328  43616e6e
00032c  6f742073
000330  65742041
000334  6c61726d
000338  20776865
00033c  6e206974
000340  20697320
000344  4f4e0a00
                  |L1.840|
                          DCD      Alarm_off
                  |L1.844|
00034c  414c4152          DCB      "ALARM!!!\n",0
000350  4d212121
000354  0a00    
000356  00                DCB      0
000357  00                DCB      0
                  |L1.856|
                          DCD      APP_alarmClock
                  |L1.860|
00035c  2a2a2a20          DCB      "*** Alarm OFF %02ld:%02ld\n",0
000360  416c6172
000364  6d204f46
000368  46202530
00036c  326c643a
000370  2530326c
000374  640a00  
000377  00                DCB      0
                  |L1.888|
000378  2a2a2a20          DCB      "*** Alarm reset %02ld:%02ld\n",0
00037c  416c6172
000380  6d207265
000384  73657420
000388  2530326c
00038c  643a2530
000390  326c640a
000394  00      
000395  00                DCB      0
000396  00                DCB      0
000397  00                DCB      0
                  |L1.920|
                          DCD      0x00002710
                  |L1.924|
00039c  2a2a2a20          DCB      "*** Alarm SET %02ld:%02ld\n",0
0003a0  416c6172
0003a4  6d205345
0003a8  54202530
0003ac  326c643a
0003b0  2530326c
0003b4  640a00  
0003b7  00                DCB      0
                          ENDP

                  Alarm_initial PROC
                  |L1.952|
;;;27     /* @(/2/1/3/0) */
;;;28     QState Alarm_initial(Alarm * const me, QEvt const * const e) {
0003b8  e1a02000          MOV      r2,r0
;;;29         (void)e;               /* avoid compiler warning about unused parameter */
;;;30         me->alarm_time = 12*60;
0003bc  e3a00e2d          MOV      r0,#0x2d0
0003c0  e1c201b0          STRH     r0,[r2,#0x10]
;;;31         return Q_TRAN(&Alarm_off);
0003c4  e24f0e2a          ADR      r0,|L1.300|
0003c8  e5820008          STR      r0,[r2,#8]
0003cc  e3a00008          MOV      r0,#8
;;;32     }
0003d0  e12fff1e          BX       lr
;;;33     /* @(/2/1/3/1) .............................................................*/
                          ENDP

                  Alarm_ctor PROC
;;;21     /* @(/2/3) .................................................................*/
;;;22     void Alarm_ctor(Alarm * me) {
0003d4  e92d4010          PUSH     {r4,lr}
0003d8  e1a04000          MOV      r4,r0
;;;23         QFsm_ctor(&me->super, (QStateHandler)&Alarm_initial);
0003dc  e24f102c          ADR      r1,|L1.952|
0003e0  e1a00004          MOV      r0,r4
0003e4  ebfffffe          BL       QFsm_ctor
;;;24     }
0003e8  e8bd4010          POP      {r4,lr}
0003ec  e12fff1e          BX       lr
;;;25     /* @(/2/1) .................................................................*/
                          ENDP

