; generated by Component: ARM Compiler 5.04 update 1 (build 49) Tool: ArmCC [5040049]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\retarget.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\retarget.d --apcs=interwork -O0 --diag_suppress=9931 -I.\bombqmbsp -I..\..\..\..\..\..\..\CPU_Platforms\ARM\ARM7\MCB2300\include -I..\..\..\..\..\..\..\Framewworks\Quantum\qpc_5.3.1\qpc\ports\arm7\Keil -I..\..\..\..\..\..\..\Framewworks\Quantum\qpc_5.3.1\qpc\include -I.\src -I.\src\coffee -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\Philips -D__MICROLIB -DQM_TICK -DQM_ActiveObject --omf_browse=.\obj\retarget.crf src\Retarget.c]
                          ARM

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  fputc PROC
;;;28     
;;;29     int fputc(int ch, FILE *f) {
000000  e92d4070          PUSH     {r4-r6,lr}
000004  e1a04000          MOV      r4,r0
000008  e1a05001          MOV      r5,r1
;;;30      
;;;31      if ( ch == 0x0a	)
00000c  e354000a          CMP      r4,#0xa
000010  1a000001          BNE      |L1.28|
;;;32     	send_char(0x0d);
000014  e3a0000d          MOV      r0,#0xd
000018  ebfffffe          BL       send_char
                  |L1.28|
;;;33     
;;;34     	return (send_char(ch));
00001c  e1a00004          MOV      r0,r4
000020  ebfffffe          BL       send_char
000024  e8bd4070          POP      {r4-r6,lr}
;;;35     }
000028  e12fff1e          BX       lr
;;;36     
                          ENDP

                  getch PROC
;;;37     
;;;38     int getch(void) {
00002c  e92d4010          PUSH     {r4,lr}
;;;39     
;;;40     return (getkey0()) ;
000030  ebfffffe          BL       getkey0
000034  e8bd4010          POP      {r4,lr}
;;;41     
;;;42     }
000038  e12fff1e          BX       lr
;;;43     
                          ENDP

                  fgetc PROC
;;;44     int fgetc( FILE *f) {
00003c  e92d4010          PUSH     {r4,lr}
000040  e1a04000          MOV      r4,r0
;;;45     						    
;;;46     	return(getkey0());	  /* in serial.c */
000044  ebfffffe          BL       getkey0
000048  e8bd4010          POP      {r4,lr}
;;;47     }
00004c  e12fff1e          BX       lr
;;;48     
                          ENDP

                  _ttywrch PROC
;;;56     
;;;57     void _ttywrch(int ch) {
000050  e92d4010          PUSH     {r4,lr}
000054  e1a04000          MOV      r4,r0
;;;58     
;;;59       send_char(ch);
000058  e1a00004          MOV      r0,r4
00005c  ebfffffe          BL       send_char
;;;60       
;;;61     }
000060  e8bd4010          POP      {r4,lr}
000064  e12fff1e          BX       lr
;;;62     
                          ENDP

                  _sys_exit PROC
;;;63     
;;;64     void _sys_exit(int return_code) {
000068  e1a00000          MOV      r0,r0
                  |L1.108|
;;;65     label:  goto label;  /* endless loop */
00006c  eafffffe          B        |L1.108|
;;;66     }
                          ENDP


                          AREA ||.data||, DATA, ALIGN=2

                  __stdout
                          DCD      0x00000000
                  __stdin
                          DCD      0x00000000
                  __stderr
                          DCD      0x00000000
