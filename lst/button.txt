; generated by Component: ARM Compiler 5.04 update 1 (build 49) Tool: ArmCC [5040049]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\button.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\button.d --apcs=interwork -O0 --diag_suppress=9931 -I.\bombqmbsp -I..\..\..\..\..\..\..\CPU_Platforms\ARM\ARM7\MCB2300\include -I..\..\..\..\..\..\..\Framewworks\Quantum\qpc_5.3.1\qpc\ports\arm7\Keil -I..\..\..\..\..\..\..\Framewworks\Quantum\qpc_5.3.1\qpc\include -I.\src -I.\src\coffee -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\Philips -D__MICROLIB -DQM_TICK -DQM_ActiveObject --omf_browse=.\obj\button.crf bsp\button.c]
                          ARM

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  button_down PROC
;;;56     
;;;57     void button_down()
000000  e12fff1e          BX       lr
;;;58     {
;;;59     // DOWN!!!!
;;;60     }
;;;61     
                          ENDP

                  button_up PROC
;;;47     
;;;48     void button_up()
000004  e92d4010          PUSH     {r4,lr}
;;;49     {
;;;50     	if(&l_CoffeeAO != 0) {
000008  e59f0118          LDR      r0,|L1.296|
00000c  e3500000          CMP      r0,#0
000010  0a00000d          BEQ      |L1.76|
;;;51     		QF_INT_ENABLE();
000014  e10f0000          MRS      r0,APSR ; formerly CPSR
000018  e3c00080          BIC      r0,r0,#0x80
00001c  e121f000          MSR      CPSR_c,r0
;;;52     		QActive_postFIFO((QActive *)&l_CoffeeAO, (QEvent *)&event);
000020  e59f0100          LDR      r0,|L1.296|
000024  e5900000          LDR      r0,[r0,#0]  ; l_CoffeeAO
000028  e3a02000          MOV      r2,#0
00002c  e59f10f8          LDR      r1,|L1.300|
000030  e590300c          LDR      r3,[r0,#0xc]
000034  e59f00ec          LDR      r0,|L1.296|
000038  e1a0e00f          MOV      lr,pc
00003c  e12fff13          BX       r3
;;;53     		QF_INT_DISABLE();
000040  e10f0000          MRS      r0,APSR ; formerly CPSR
000044  e3800080          ORR      r0,r0,#0x80
000048  e121f000          MSR      CPSR_c,r0
                  |L1.76|
;;;54     	}
;;;55     }
00004c  e8bd4010          POP      {r4,lr}
000050  e12fff1e          BX       lr
;;;56     
                          ENDP

                  GPIO_IRQHandler PROC
                  |L1.84|
;;;27     
;;;28     __irq void GPIO_IRQHandler(void)
000054  e92d503f          PUSH     {r0-r5,r12,lr}
;;;29     {
;;;30     	int rising;
;;;31     	int i;
;;;32     
;;;33     	
;;;34     	for(i = 0; i < 1000; i++);
000058  e3a04000          MOV      r4,#0
00005c  ea000000          B        |L1.100|
                  |L1.96|
000060  e2844001          ADD      r4,r4,#1
                  |L1.100|
000064  e3540ffa          CMP      r4,#0x3e8
000068  bafffffc          BLT      |L1.96|
;;;35     
;;;36     	rising = FIO2PIN & (1 << 10);        /* Value of P2.10 */
00006c  e59f00bc          LDR      r0,|L1.304|
000070  e5900054          LDR      r0,[r0,#0x54]
000074  e2005b01          AND      r5,r0,#0x400
;;;37     
;;;38     	if(rising)
000078  e3550000          CMP      r5,#0
00007c  0a000001          BEQ      |L1.136|
;;;39     		button_up();
000080  ebfffffe          BL       button_up
000084  ea000000          B        |L1.140|
                  |L1.136|
;;;40     	else
;;;41     		button_down();
000088  ebfffffe          BL       button_down
                  |L1.140|
;;;42     
;;;43     	IO2_INT_CLR = 1 << 10;					  /* Clear Interrupt                    */
00008c  e3a00b01          MOV      r0,#0x400
000090  e59f109c          LDR      r1,|L1.308|
000094  e58100ac          STR      r0,[r1,#0xac]
;;;44     	VICVectAddr = 0;                      /* Acknowledge Interrupt              */
000098  e3a00000          MOV      r0,#0
00009c  e5000100          STR      r0,[r0,#-0x100]
;;;45     
;;;46     }
0000a0  e8bd503f          POP      {r0-r5,r12,lr}
0000a4  e25ef004          SUBS     pc,lr,#4
;;;47     
                          ENDP

                  Button_Init PROC
;;;14     	
;;;15     void Button_Init()
0000a8  e59f0088          LDR      r0,|L1.312|
;;;16     {
;;;17     	PINSEL4 &= ~(3 << 20);                       /* Set P2.10 to GPIO           */
0000ac  e5900010          LDR      r0,[r0,#0x10]
0000b0  e3c00603          BIC      r0,r0,#0x300000
0000b4  e59f107c          LDR      r1,|L1.312|
0000b8  e5810010          STR      r0,[r1,#0x10]
;;;18     	FIO2DIR &= ~(1 << 10);                       /* Set P2.10 to input          */
0000bc  e59f006c          LDR      r0,|L1.304|
0000c0  e5900040          LDR      r0,[r0,#0x40]
0000c4  e3c00b01          BIC      r0,r0,#0x400
0000c8  e59f1060          LDR      r1,|L1.304|
0000cc  e5810040          STR      r0,[r1,#0x40]
;;;19     	IO2_INT_EN_R |= (1 << 10);                      /* Enable rising egde interrupt for P2.10. */
0000d0  e59f005c          LDR      r0,|L1.308|
0000d4  e59000b0          LDR      r0,[r0,#0xb0]
0000d8  e3800b01          ORR      r0,r0,#0x400
0000dc  e59f1050          LDR      r1,|L1.308|
0000e0  e58100b0          STR      r0,[r1,#0xb0]
;;;20     	IO2_INT_EN_F |= (1 << 10);                      /* Enable falling egde interrupt for P2.10. */
0000e4  e1a00001          MOV      r0,r1
0000e8  e59000b4          LDR      r0,[r0,#0xb4]
0000ec  e3800b01          ORR      r0,r0,#0x400
0000f0  e58100b4          STR      r0,[r1,#0xb4]
;;;21     	VICVectAddr17 = (unsigned long)GPIO_IRQHandler;/* Set Interrupt Vector       */
0000f4  e24f00a8          ADR      r0,|L1.84|
0000f8  e3a01000          MOV      r1,#0
0000fc  e5010ebc          STR      r0,[r1,#-0xebc]
;;;22     	VICVectCntl17 = 13;                          /* use it for ADC Interrupt    */
000100  e3a0000d          MOV      r0,#0xd
000104  e5010dbc          STR      r0,[r1,#-0xdbc]
;;;23     	VICIntEnable  = (1  << 17);                  /* Enable ADC Interrupt        */
000108  e3a00802          MOV      r0,#0x20000
00010c  e5010ff0          STR      r0,[r1,#-0xff0]
;;;24     	event.sig = INT_SIG;
000110  e3a00015          MOV      r0,#0x15
000114  e59f1010          LDR      r1,|L1.300|
000118  e1c100b0          STRH     r0,[r1,#0]  ; event
;;;25     	event.poolId_ = 0;	
00011c  e3a00000          MOV      r0,#0
000120  e5c10002          STRB     r0,[r1,#2]  ; event
;;;26     }
000124  e12fff1e          BX       lr
;;;27     
                          ENDP

                  |L1.296|
                          DCD      l_CoffeeAO
                  |L1.300|
                          DCD      event
                  |L1.304|
                          DCD      0x3fffc000
                  |L1.308|
                          DCD      0xe0028000
                  |L1.312|
                          DCD      0xe002c000

                          AREA ||.data||, DATA, ALIGN=1

                  event
                          DCDU     0x00000000
