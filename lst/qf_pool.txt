; generated by Component: ARM Compiler 5.04 update 1 (build 49) Tool: ArmCC [5040049]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\qf_pool.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\qf_pool.d --apcs=interwork -O0 --diag_suppress=9931 -I.\bombqmbsp -I..\..\..\..\..\..\..\CPU_Platforms\ARM\ARM7\MCB2300\include -I..\..\..\..\..\..\..\Framewworks\Quantum\qpc_5.3.1\qpc\ports\arm7\Keil -I..\..\..\..\..\..\..\Framewworks\Quantum\qpc_5.3.1\qpc\include -I.\src -I.\src\coffee -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\Philips -D__MICROLIB -DQM_TICK -DQM_ActiveObject --omf_browse=.\obj\qf_pool.crf ..\..\..\..\..\..\..\Framewworks\Quantum\qpc_5.3.1\qpc\qf\source\qf_pool.c]
                          ARM

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  QF_poolInit PROC
;;;86     */
;;;87     void QF_poolInit(void * const poolSto, uint_fast16_t const poolSize,
000000  e92d4070          PUSH     {r4-r6,lr}
;;;88                      uint_fast16_t const evtSize)
;;;89     {
000004  e1a05000          MOV      r5,r0
000008  e1a06001          MOV      r6,r1
00000c  e1a04002          MOV      r4,r2
;;;90         /** \pre cannot exceed the number of available memory pools */
;;;91         Q_REQUIRE_ID(100, QF_maxPool_ < (uint_fast8_t)Q_DIM(QF_pool_));
000010  e59f009c          LDR      r0,|L1.180|
000014  e5900000          LDR      r0,[r0,#0]  ; QF_maxPool_
000018  e3500003          CMP      r0,#3
00001c  2a000000          BCS      |L1.36|
000020  ea000002          B        |L1.48|
                  |L1.36|
000024  e3a01064          MOV      r1,#0x64
000028  e59f0088          LDR      r0,|L1.184|
00002c  ebfffffe          BL       Q_onAssert
                  |L1.48|
;;;92         /** \pre please initialize event pools in ascending order of evtSize: */
;;;93         Q_REQUIRE_ID(101, (QF_maxPool_ == (uint_fast8_t)0)
000030  e59f007c          LDR      r0,|L1.180|
000034  e5900000          LDR      r0,[r0,#0]  ; QF_maxPool_
000038  e3500000          CMP      r0,#0
00003c  0a000008          BEQ      |L1.100|
000040  e59f006c          LDR      r0,|L1.180|
000044  e5900000          LDR      r0,[r0,#0]  ; QF_maxPool_
000048  e2400001          SUB      r0,r0,#1
00004c  e0800100          ADD      r0,r0,r0,LSL #2
000050  e59f1064          LDR      r1,|L1.188|
000054  e0810100          ADD      r0,r1,r0,LSL #2
000058  e1d000bc          LDRH     r0,[r0,#0xc]
00005c  e1500004          CMP      r0,r4
000060  2a000000          BCS      |L1.104|
                  |L1.100|
000064  ea000002          B        |L1.116|
                  |L1.104|
000068  e3a01065          MOV      r1,#0x65
00006c  e59f0044          LDR      r0,|L1.184|
000070  ebfffffe          BL       Q_onAssert
                  |L1.116|
;;;94             || (QF_EPOOL_EVENT_SIZE_(QF_pool_[QF_maxPool_ - (uint_fast8_t)1])
;;;95                 < evtSize));
;;;96     
;;;97         /* perform the platform-dependent initialization of the pool */
;;;98         QF_EPOOL_INIT_(QF_pool_[QF_maxPool_],
000074  e59f1038          LDR      r1,|L1.180|
000078  e5911000          LDR      r1,[r1,#0]  ; QF_maxPool_
00007c  e0811101          ADD      r1,r1,r1,LSL #2
000080  e59f2034          LDR      r2,|L1.188|
000084  e0820101          ADD      r0,r2,r1,LSL #2
000088  e1a03004          MOV      r3,r4
00008c  e1a02006          MOV      r2,r6
000090  e1a01005          MOV      r1,r5
000094  ebfffffe          BL       QMPool_init
;;;99                        poolSto, poolSize, evtSize);
;;;100        ++QF_maxPool_; /* one more pool */
000098  e59f0014          LDR      r0,|L1.180|
00009c  e5900000          LDR      r0,[r0,#0]  ; QF_maxPool_
0000a0  e2800001          ADD      r0,r0,#1
0000a4  e59f1008          LDR      r1,|L1.180|
0000a8  e5810000          STR      r0,[r1,#0]  ; QF_maxPool_
;;;101    }
0000ac  e8bd4070          POP      {r4-r6,lr}
0000b0  e12fff1e          BX       lr
                          ENDP

                  |L1.180|
                          DCD      QF_maxPool_
                  |L1.184|
                          DCD      Q_this_module_
                  |L1.188|
                          DCD      QF_pool_

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  QF_pool_
                          %        60

                          AREA ||.constdata||, DATA, READONLY, ALIGN=0

                  Q_this_module_
000000  71665f70          DCB      0x71,0x66,0x5f,0x70
000004  6f6f6c00          DCB      0x6f,0x6f,0x6c,0x00

                          AREA ||.data||, DATA, ALIGN=2

                  QF_maxPool_
                          DCD      0x00000000
