; generated by Component: ARM Compiler 5.04 update 1 (build 49) Tool: ArmCC [5040049]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\qmsm_ini.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\qmsm_ini.d --apcs=interwork -O0 --diag_suppress=9931 -I.\bombqmbsp -I..\..\..\..\..\..\..\CPU_Platforms\ARM\ARM7\MCB2300\include -I..\..\..\..\..\..\..\Framewworks\Quantum\qpc_5.3.1\qpc\ports\arm7\Keil -I..\..\..\..\..\..\..\Framewworks\Quantum\qpc_5.3.1\qpc\include -I.\src -I.\src\coffee -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\Philips -D__MICROLIB -DQM_TICK -DQM_ActiveObject --omf_browse=.\obj\qmsm_ini.crf ..\..\..\..\..\..\..\Framewworks\Quantum\qpc_5.3.1\qpc\qep\source\qmsm_ini.c]
                          ARM

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  QMsm_ctor PROC
;;;77     */
;;;78     void QMsm_ctor(QMsm * const me, QStateHandler initial) {
000000  e59f20b4          LDR      r2,|L1.188|
;;;79         static QMsmVtbl const vtbl = { /* QMsm virtual table */
;;;80             &QMsm_init_,
;;;81             &QMsm_dispatch_
;;;82         };
;;;83         me->vptr = &vtbl;
000004  e5802000          STR      r2,[r0,#0]
;;;84         me->state.obj = &l_msm_top_s; /* the current state (top) */
000008  e59f20b0          LDR      r2,|L1.192|
00000c  e5802004          STR      r2,[r0,#4]
;;;85         me->temp.fun  = initial;      /* the initial transition handler */
000010  e5801008          STR      r1,[r0,#8]
;;;86     }
000014  e12fff1e          BX       lr
;;;87     
                          ENDP

                  QMsm_init_ PROC
;;;98     */
;;;99     void QMsm_init_(QMsm * const me, QEvt const * const e) {
000018  e92d4070          PUSH     {r4-r6,lr}
00001c  e1a04000          MOV      r4,r0
000020  e1a06001          MOV      r6,r1
;;;100        QState r;
;;;101        QS_CRIT_STAT_
;;;102    
;;;103        /** \pre the virtual pointer must be initialized, the top-most initial
;;;104        * transition must be initialized, and the initial transition must not
;;;105        * be taken yet.
;;;106        */
;;;107        Q_REQUIRE_ID(200, (me->vptr != (QMsmVtbl const *)0)
000024  e5940000          LDR      r0,[r4,#0]
000028  e3500000          CMP      r0,#0
00002c  0a000007          BEQ      |L1.80|
000030  e5940008          LDR      r0,[r4,#8]
000034  e3500000          CMP      r0,#0
000038  0a000004          BEQ      |L1.80|
00003c  e59f107c          LDR      r1,|L1.192|
000040  e5940004          LDR      r0,[r4,#4]
000044  e1500001          CMP      r0,r1
000048  1a000000          BNE      |L1.80|
00004c  ea000002          B        |L1.92|
                  |L1.80|
000050  e3a010c8          MOV      r1,#0xc8
000054  e59f0068          LDR      r0,|L1.196|
000058  ebfffffe          BL       Q_onAssert
                  |L1.92|
;;;108                          && (me->temp.fun != Q_STATE_CAST(0))
;;;109                          && (me->state.obj == &l_msm_top_s));
;;;110    
;;;111        r = (*me->temp.fun)(me, e); /* the action of the top-most initial tran. */
00005c  e1a01006          MOV      r1,r6
000060  e5942008          LDR      r2,[r4,#8]
000064  e1a00004          MOV      r0,r4
000068  e1a0e00f          MOV      lr,pc
00006c  e12fff12          BX       r2
000070  e1a05000          MOV      r5,r0
;;;112    
;;;113        /* the top-most initial transition must be taken */
;;;114        Q_ASSERT_ID(210, r == (QState)Q_RET_TRAN_INIT);
000074  e3550009          CMP      r5,#9
000078  1a000000          BNE      |L1.128|
00007c  ea000002          B        |L1.140|
                  |L1.128|
000080  e3a010d2          MOV      r1,#0xd2
000084  e59f0038          LDR      r0,|L1.196|
000088  ebfffffe          BL       Q_onAssert
                  |L1.140|
;;;115    
;;;116        QS_BEGIN_(QS_QEP_STATE_INIT, QS_priv_.smObjFilter, me)
;;;117            QS_OBJ_(me); /* this state machine object */
;;;118            QS_FUN_(me->state.obj->stateHandler);        /* source state handler*/
;;;119            QS_FUN_(me->temp.tatbl->target->stateHandler);/*target state handler*/
;;;120        QS_END_()
;;;121    
;;;122        /* set state to the last tran. target */
;;;123        me->state.obj = me->temp.tatbl->target;
00008c  e5940008          LDR      r0,[r4,#8]
000090  e5900000          LDR      r0,[r0,#0]
000094  e5840004          STR      r0,[r4,#4]
;;;124    
;;;125        /* drill down into the state hierarchy with initial transitions... */
;;;126        do {
000098  e1a00000          MOV      r0,r0
                  |L1.156|
;;;127            r = QMsm_execTatbl_(me, me->temp.tatbl); /* execute the tran. table */
00009c  e5941008          LDR      r1,[r4,#8]
0000a0  e1a00004          MOV      r0,r4
0000a4  ebfffffe          BL       QMsm_execTatbl_
0000a8  e1a05000          MOV      r5,r0
;;;128        } while (r >= (QState)Q_RET_TRAN_INIT);
0000ac  e3550009          CMP      r5,#9
0000b0  2afffff9          BCS      |L1.156|
;;;129    
;;;130        QS_BEGIN_(QS_QEP_INIT_TRAN, QS_priv_.smObjFilter, me)
;;;131            QS_TIME_();                           /* time stamp */
;;;132            QS_OBJ_(me);                          /* this state machine object */
;;;133            QS_FUN_(me->state.obj->stateHandler); /* the new current state */
;;;134        QS_END_()
;;;135    }
0000b4  e8bd4070          POP      {r4-r6,lr}
0000b8  e12fff1e          BX       lr
                          ENDP

                  |L1.188|
                          DCD      vtbl
                  |L1.192|
                          DCD      l_msm_top_s
                  |L1.196|
                          DCD      Q_this_module_

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

                  Q_this_module_
000000  716d736d          DCB      0x71,0x6d,0x73,0x6d
000004  5f696e69          DCB      0x5f,0x69,0x6e,0x69
000008  00000000          DCB      0x00,0x00,0x00,0x00
                  l_msm_top_s
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                  vtbl
                          DCD      QMsm_init_
                          DCD      QMsm_dispatch_
