; generated by Component: ARM Compiler 5.04 update 1 (build 49) Tool: ArmCC [5040049]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\adwheel.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\adwheel.d --apcs=interwork -O0 --diag_suppress=9931 -I.\bombqmbsp -I..\..\..\..\..\..\..\CPU_Platforms\ARM\ARM7\MCB2300\include -I..\..\..\..\..\..\..\Framewworks\Quantum\qpc_5.3.1\qpc\ports\arm7\Keil -I..\..\..\..\..\..\..\Framewworks\Quantum\qpc_5.3.1\qpc\include -I.\src -I.\src\coffee -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\Philips -D__MICROLIB -DQM_TICK -DQM_ActiveObject --omf_browse=.\obj\adwheel.crf bsp\adwheel.c]
                          ARM

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  ADC_IRQHandler PROC
                  |L1.0|
;;;10     /* A/D IRQ: Executed when A/D Conversion is done                              */
;;;11     __irq void ADC_IRQHandler(void) {
000000  e92d500f          PUSH     {r0-r3,r12,lr}
;;;12     	ad_evt.val = (AD0DR0 >> 6) & 0x3FF;      /* Read Conversion Result             */
000004  e59f00c8          LDR      r0,|L1.212|
000008  e5900010          LDR      r0,[r0,#0x10]
00000c  e59f10c4          LDR      r1,|L1.216|
000010  e0010320          AND      r0,r1,r0,LSR #6
000014  e59f10c0          LDR      r1,|L1.220|
000018  e1c100b4          STRH     r0,[r1,#4]  ; ad_evt
;;;13     	if(&l_CoffeeAO != 0) {
00001c  e59f00bc          LDR      r0,|L1.224|
000020  e3500000          CMP      r0,#0
000024  0a00000c          BEQ      |L1.92|
;;;14     		QF_INT_ENABLE();
000028  e10f0000          MRS      r0,APSR ; formerly CPSR
00002c  e3c00080          BIC      r0,r0,#0x80
000030  e121f000          MSR      CPSR_c,r0
;;;15     		QActive_postFIFO((QActive *)&l_CoffeeAO, (QEvent *)&ad_evt);
000034  e59f00a4          LDR      r0,|L1.224|
000038  e5900000          LDR      r0,[r0,#0]  ; l_CoffeeAO
00003c  e3a02000          MOV      r2,#0
000040  e590300c          LDR      r3,[r0,#0xc]
000044  e59f0094          LDR      r0,|L1.224|
000048  e1a0e00f          MOV      lr,pc
00004c  e12fff13          BX       r3
;;;16     		QF_INT_DISABLE();
000050  e10f0000          MRS      r0,APSR ; formerly CPSR
000054  e3800080          ORR      r0,r0,#0x80
000058  e121f000          MSR      CPSR_c,r0
                  |L1.92|
;;;17     	}
;;;18       VICVectAddr = 0;                      /* Acknowledge Interrupt              */
00005c  e3a00000          MOV      r0,#0
000060  e5000100          STR      r0,[r0,#-0x100]
;;;19     }
000064  e8bd500f          POP      {r0-r3,r12,lr}
000068  e25ef004          SUBS     pc,lr,#4
;;;20     
                          ENDP

                  AD_Wheel_Init PROC
;;;21     void AD_Wheel_Init(void )  {
00006c  e59f0070          LDR      r0,|L1.228|
;;;22     	PCONP        |= (1 << 12);                   /* Enable power to AD block    */
000070  e59000c4          LDR      r0,[r0,#0xc4]
000074  e3800a01          ORR      r0,r0,#0x1000
000078  e59f1064          LDR      r1,|L1.228|
00007c  e58100c4          STR      r0,[r1,#0xc4]
;;;23       PINSEL1       = 0x4000;                      /* AD0.0 pin function select   */
000080  e3a00901          MOV      r0,#0x4000
000084  e241181d          SUB      r1,r1,#0x1d0000
000088  e5810004          STR      r0,[r1,#4]
;;;24       AD0INTEN      = (1 <<  0);                   /* CH0 enable interrupt        */
00008c  e3a00001          MOV      r0,#1
000090  e0811780          ADD      r1,r1,r0,LSL #15
000094  e581000c          STR      r0,[r1,#0xc]
;;;25       AD0CR         = 0x00200301;                  /* Power up, PCLK/4, sel AD0.0 */
000098  e59f0048          LDR      r0,|L1.232|
00009c  e5810000          STR      r0,[r1,#0]
;;;26       VICVectAddr18 = (unsigned long)ADC_IRQHandler;/* Set Interrupt Vector       */
0000a0  e24f00a8          ADR      r0,|L1.0|
0000a4  e3a01000          MOV      r1,#0
0000a8  e5010eb8          STR      r0,[r1,#-0xeb8]
;;;27       VICVectCntl18 = 14;                          /* use it for ADC Interrupt    */
0000ac  e3a0000e          MOV      r0,#0xe
0000b0  e5010db8          STR      r0,[r1,#-0xdb8]
;;;28       VICIntEnable  = (1  << 18);                  /* Enable ADC Interrupt        */
0000b4  e3a00701          MOV      r0,#0x40000
0000b8  e5010ff0          STR      r0,[r1,#-0xff0]
;;;29     	ad_evt.super.sig = ADWHEEL_SIG;
0000bc  e3a00014          MOV      r0,#0x14
0000c0  e59f1014          LDR      r1,|L1.220|
0000c4  e1c100b0          STRH     r0,[r1,#0]  ; ad_evt
;;;30     	ad_evt.super.poolId_ = 0;	
0000c8  e3a00000          MOV      r0,#0
0000cc  e5c10002          STRB     r0,[r1,#2]  ; ad_evt
;;;31     }
0000d0  e12fff1e          BX       lr
;;;32     
                          ENDP

                  |L1.212|
                          DCD      0xe0034000
                  |L1.216|
                          DCD      0x000003ff
                  |L1.220|
                          DCD      ad_evt
                  |L1.224|
                          DCD      l_CoffeeAO
                  |L1.228|
                          DCD      0xe01fc000
                  |L1.232|
                          DCD      0x00200301

                          AREA ||.data||, DATA, ALIGN=1

                  ad_evt
                          DCDU     0x00000000
000004  0000              DCB      0x00,0x00
