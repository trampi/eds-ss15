; generated by Component: ARM Compiler 5.04 update 1 (build 49) Tool: ArmCC [5040049]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\timer.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\timer.d --apcs=interwork -O0 --diag_suppress=9931 -I.\bombqmbsp -I..\..\..\..\..\..\..\CPU_Platforms\ARM\ARM7\MCB2300\include -I..\..\..\..\..\..\..\Framewworks\Quantum\qpc_5.3.1\qpc\ports\arm7\Keil -I..\..\..\..\..\..\..\Framewworks\Quantum\qpc_5.3.1\qpc\include -I.\src -I.\src\coffee -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\Philips -D__MICROLIB -DQM_TICK -DQM_ActiveObject --omf_browse=.\obj\timer.crf bsp\timer.c]
                          ARM

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  T0_IRQHandler PROC
                  |L1.0|
;;;5      /* Timer0 IRQ: Executed periodically                                          */
;;;6      __irq void T0_IRQHandler (void) {
000000  e92d500f          PUSH     {r0-r3,r12,lr}
;;;7       
;;;8      	QF_INT_ENABLE();
000004  e10f0000          MRS      r0,APSR ; formerly CPSR
000008  e3c00080          BIC      r0,r0,#0x80
00000c  e121f000          MSR      CPSR_c,r0
;;;9      	QF_tick();
000010  e3a00000          MOV      r0,#0
000014  ebfffffe          BL       QF_tickX_
;;;10     	QF_INT_DISABLE();
000018  e10f0000          MRS      r0,APSR ; formerly CPSR
00001c  e3800080          ORR      r0,r0,#0x80
000020  e121f000          MSR      CPSR_c,r0
;;;11     	
;;;12       T0IR        = 1;                      /* Clear interrupt flag               */
000024  e3a00001          MOV      r0,#1
000028  e59f10bc          LDR      r1,|L1.236|
00002c  e5810000          STR      r0,[r1,#0]
;;;13       VICVectAddr = 0;                      /* Acknowledge Interrupt              */
000030  e3a00000          MOV      r0,#0
000034  e5000100          STR      r0,[r0,#-0x100]
;;;14     }
000038  e8bd500f          POP      {r0-r3,r12,lr}
00003c  e25ef004          SUBS     pc,lr,#4
;;;15     
                          ENDP

                  Timer0_Init PROC
;;;16     
;;;17     void  Timer0_Init(void )  {
000040  e59f00a8          LDR      r0,|L1.240|
;;;18     	
;;;19     	
;;;20       /* Enable and setup timer interrupt, start timer                            */
;;;21       T0MR0         = 11999;                       /* 1msec = 12000-1 at 12.0 MHz */
000044  e59f10a0          LDR      r1,|L1.236|
000048  e5810018          STR      r0,[r1,#0x18]
;;;22       T0MCR         = 3;                           /* Interrupt and Reset on MR0  */
00004c  e3a00003          MOV      r0,#3
000050  e5810014          STR      r0,[r1,#0x14]
;;;23       T0TCR         = 1;                           /* Timer0 Enable               */
000054  e3a00001          MOV      r0,#1
000058  e5810004          STR      r0,[r1,#4]
;;;24       VICVectAddr4  = (unsigned long)T0_IRQHandler;/* Set Interrupt Vector        */
00005c  e24f0064          ADR      r0,|L1.0|
000060  e3a01000          MOV      r1,#0
000064  e5010ef0          STR      r0,[r1,#-0xef0]
;;;25       VICVectCntl4  = 14;                          /* use it for Timer0 Interrupt */
000068  e3a0000e          MOV      r0,#0xe
00006c  e5010df0          STR      r0,[r1,#-0xdf0]
;;;26       VICIntEnable  = (1  << 4);                   /* Enable Timer0 Interrupt     */
000070  e3a00010          MOV      r0,#0x10
000074  e5010ff0          STR      r0,[r1,#-0xff0]
;;;27     	
;;;28     }
000078  e12fff1e          BX       lr
;;;29     
                          ENDP

                  T1_IRQHandler PROC
                  |L1.124|
;;;30     /* Timer0 IRQ: Executed periodically                                          */
;;;31     __irq void T1_IRQHandler (void) {
00007c  e92d0003          PUSH     {r0,r1}
;;;32     
;;;33     	
;;;34       AD0CR |= 0x01000000;                  /* Start A/D Conversion               */
000080  e59f006c          LDR      r0,|L1.244|
000084  e5900000          LDR      r0,[r0,#0]
000088  e3800401          ORR      r0,r0,#0x1000000
00008c  e59f1060          LDR      r1,|L1.244|
000090  e5810000          STR      r0,[r1,#0]
;;;35       T1IR        = 1;                      /* Clear interrupt flag               */
000094  e3a00001          MOV      r0,#1
000098  e241190b          SUB      r1,r1,#0x2c000
00009c  e5810000          STR      r0,[r1,#0]
;;;36       VICVectAddr = 0;                      /* Acknowledge Interrupt              */
0000a0  e3a00000          MOV      r0,#0
0000a4  e5000100          STR      r0,[r0,#-0x100]
;;;37     	
;;;38     }
0000a8  e8bd0003          POP      {r0,r1}
0000ac  e25ef004          SUBS     pc,lr,#4
;;;39     
                          ENDP

                  Timer1_Init PROC
;;;40     void Timer1_Init(void )  {
0000b0  e59f0040          LDR      r0,|L1.248|
;;;41     	
;;;42     	
;;;43       /* Enable and setup timer interrupt, start timer                            */
;;;44       T1MR0         = 11999 * 100;                       /* 1msec = 12000-1 at 12.0 MHz */
0000b4  e59f1040          LDR      r1,|L1.252|
0000b8  e5810018          STR      r0,[r1,#0x18]
;;;45       T1MCR         = 3;                           /* Interrupt and Reset on MR0  */
0000bc  e3a00003          MOV      r0,#3
0000c0  e5810014          STR      r0,[r1,#0x14]
;;;46       T1TCR         = 1;                           /* Timer0 Enable               */
0000c4  e3a00001          MOV      r0,#1
0000c8  e5810004          STR      r0,[r1,#4]
;;;47       VICVectAddr5  = (unsigned long)T1_IRQHandler;/* Set Interrupt Vector        */
0000cc  e24f0058          ADR      r0,|L1.124|
0000d0  e3a01000          MOV      r1,#0
0000d4  e5010eec          STR      r0,[r1,#-0xeec]
;;;48       VICVectCntl5  = 15;                          /* use it for Timer1 Interrupt */
0000d8  e3a0000f          MOV      r0,#0xf
0000dc  e5010dec          STR      r0,[r1,#-0xdec]
;;;49       VICIntEnable  = (1  << 5);                   /* Enable Timer1 Interrupt     */
0000e0  e3a00020          MOV      r0,#0x20
0000e4  e5010ff0          STR      r0,[r1,#-0xff0]
;;;50     
;;;51     	
;;;52     }
0000e8  e12fff1e          BX       lr
                          ENDP

                  |L1.236|
                          DCD      0xe0004000
                  |L1.240|
                          DCD      0x00002edf
                  |L1.244|
                          DCD      0xe0034000
                  |L1.248|
                          DCD      0x00124f1c
                  |L1.252|
                          DCD      0xe0008000
