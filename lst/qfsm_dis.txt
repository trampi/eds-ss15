; generated by Component: ARM Compiler 5.04 update 1 (build 49) Tool: ArmCC [5040049]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\qfsm_dis.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\qfsm_dis.d --apcs=interwork -O0 --diag_suppress=9931 -I.\bombqmbsp -I..\..\..\..\..\..\..\CPU_Platforms\ARM\ARM7\MCB2300\include -I..\..\..\..\..\..\..\Framewworks\Quantum\qpc_5.3.1\qpc\ports\arm7\Keil -I..\..\..\..\..\..\..\Framewworks\Quantum\qpc_5.3.1\qpc\include -I.\src -I.\src\coffee -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\Philips -D__MICROLIB -DQM_TICK -DQM_ActiveObject --omf_browse=.\obj\qfsm_dis.crf ..\..\..\..\..\..\..\Framewworks\Quantum\qpc_5.3.1\qpc\qep\source\qfsm_dis.c]
                          ARM

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  QFsm_dispatch_ PROC
;;;62     */
;;;63     void QFsm_dispatch_(QFsm * const me, QEvt const * const e) {
000000  e92d4070          PUSH     {r4-r6,lr}
000004  e1a04000          MOV      r4,r0
000008  e1a06001          MOV      r6,r1
;;;64         QState r;
;;;65         QS_CRIT_STAT_
;;;66     
;;;67         /** \pre the FSM must be in a stable state configuration */
;;;68         Q_REQUIRE_ID(100, me->state.fun == me->temp.fun);
00000c  e9940003          LDMIB    r4,{r0,r1}
000010  e1500001          CMP      r0,r1
000014  1a000000          BNE      |L1.28|
000018  ea000002          B        |L1.40|
                  |L1.28|
00001c  e3a01064          MOV      r1,#0x64
000020  e59f0068          LDR      r0,|L1.144|
000024  ebfffffe          BL       Q_onAssert
                  |L1.40|
;;;69     
;;;70         QS_BEGIN_(QS_QEP_DISPATCH, QS_priv_.smObjFilter, me)
;;;71             QS_TIME_();                 /* time stamp */
;;;72             QS_SIG_(e->sig);            /* the signal of the event */
;;;73             QS_OBJ_(me);                /* this state machine object */
;;;74             QS_FUN_(me->state.fun);     /* the current state */
;;;75         QS_END_()
;;;76     
;;;77         r = (*me->state.fun)(me, e);    /* call the event handler */
000028  e1a01006          MOV      r1,r6
00002c  e5942004          LDR      r2,[r4,#4]
000030  e1a00004          MOV      r0,r4
000034  e1a0e00f          MOV      lr,pc
000038  e12fff12          BX       r2
00003c  e1a05000          MOV      r5,r0
;;;78     
;;;79         /* transition taken? */
;;;80         if (r == (QState)Q_RET_TRAN) {
000040  e3550008          CMP      r5,#8
000044  1a00000f          BNE      |L1.136|
;;;81     
;;;82             QS_BEGIN_(QS_QEP_TRAN, QS_priv_.smObjFilter, me)
;;;83                 QS_TIME_();             /* time stamp */
;;;84                 QS_SIG_(e->sig);        /* the signal of the event */
;;;85                 QS_OBJ_(me);            /* this state machine object */
;;;86                 QS_FUN_(me->state.fun); /* the source of the transition */
;;;87                 QS_FUN_(me->temp.fun);  /* the target of the transition */
;;;88             QS_END_()
;;;89     
;;;90             QEP_EXIT_(me->state.fun);   /* exit the source */
000048  e1a00000          MOV      r0,r0
00004c  e59f1040          LDR      r1,|L1.148|
000050  e5942004          LDR      r2,[r4,#4]
000054  e1a00004          MOV      r0,r4
000058  e1a0e00f          MOV      lr,pc
00005c  e12fff12          BX       r2
000060  e1a00000          MOV      r0,r0
;;;91             QEP_ENTER_(me->temp.fun);   /* enter the target */
000064  e1a00000          MOV      r0,r0
000068  e59f1028          LDR      r1,|L1.152|
00006c  e5942008          LDR      r2,[r4,#8]
000070  e1a00004          MOV      r0,r4
000074  e1a0e00f          MOV      lr,pc
000078  e12fff12          BX       r2
00007c  e1a00000          MOV      r0,r0
;;;92             me->state.fun = me->temp.fun; /* record the new active state */
000080  e5940008          LDR      r0,[r4,#8]
000084  e5840004          STR      r0,[r4,#4]
                  |L1.136|
;;;93         }
;;;94         else { /* transition not taken */
;;;95     #ifdef Q_SPY
;;;96     
;;;97             if (r == (QState)Q_RET_UNHANDLED) {
;;;98                 QS_BEGIN_(QS_QEP_UNHANDLED, QS_priv_.smObjFilter, me)
;;;99                     QS_SIG_(e->sig);    /* the signal of the event */
;;;100                    QS_OBJ_(me);        /* this state machine object */
;;;101                    QS_FUN_(me->state.fun); /* the current state */
;;;102                QS_END_()
;;;103            }
;;;104    
;;;105            if (r == (QState)Q_RET_HANDLED) {
;;;106    
;;;107                QS_BEGIN_(QS_QEP_INTERN_TRAN, QS_priv_.smObjFilter, me)
;;;108                    QS_TIME_();         /* time stamp */
;;;109                    QS_SIG_(e->sig);    /* the signal of the event */
;;;110                    QS_OBJ_(me);        /* this state machine object */
;;;111                    QS_FUN_(me->state.fun); /* the current state */
;;;112                QS_END_()
;;;113    
;;;114            }
;;;115            else {
;;;116    
;;;117                QS_BEGIN_(QS_QEP_IGNORED, QS_priv_.smObjFilter, me)
;;;118                    QS_TIME_();         /* time stamp */
;;;119                    QS_SIG_(e->sig);    /* the signal of the event */
;;;120                    QS_OBJ_(me);        /* this state machine object */
;;;121                    QS_FUN_(me->state.fun); /* the current state */
;;;122                QS_END_()
;;;123    
;;;124            }
;;;125    #endif /* Q_SPY */
;;;126        }
;;;127    }
000088  e8bd4070          POP      {r4-r6,lr}
00008c  e12fff1e          BX       lr
                          ENDP

                  |L1.144|
                          DCD      Q_this_module_
                  |L1.148|
                          DCD      QEP_reservedEvt_+0x8
                  |L1.152|
                          DCD      QEP_reservedEvt_+0x4

                          AREA ||.constdata||, DATA, READONLY, ALIGN=0

                  Q_this_module_
000000  7166736d          DCB      0x71,0x66,0x73,0x6d
000004  5f646973          DCB      0x5f,0x64,0x69,0x73
000008  00                DCB      0x00
