; generated by Component: ARM Compiler 5.04 update 1 (build 49) Tool: ArmCC [5040049]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\qhsm_ini.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\qhsm_ini.d --apcs=interwork -O0 --diag_suppress=9931 -I.\bombqmbsp -I..\..\..\..\..\..\..\CPU_Platforms\ARM\ARM7\MCB2300\include -I..\..\..\..\..\..\..\Framewworks\Quantum\qpc_5.3.1\qpc\ports\arm7\Keil -I..\..\..\..\..\..\..\Framewworks\Quantum\qpc_5.3.1\qpc\include -I.\src -I.\src\coffee -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\Philips -D__MICROLIB -DQM_TICK -DQM_ActiveObject --omf_browse=.\obj\qhsm_ini.crf ..\..\..\..\..\..\..\Framewworks\Quantum\qpc_5.3.1\qpc\qep\source\qhsm_ini.c]
                          ARM

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  QHsm_ctor PROC
;;;80     */
;;;81     void QHsm_ctor(QHsm * const me, QStateHandler initial) {
000000  e59f215c          LDR      r2,|L1.356|
;;;82         static QMsmVtbl const vtbl = { /* QHsm virtual table */
;;;83             &QHsm_init_,
;;;84             &QHsm_dispatch_
;;;85         };
;;;86         /* do not call the QMsm_ctor() here */
;;;87         me->vptr  = &vtbl;
000004  e5802000          STR      r2,[r0,#0]
;;;88         me->state.fun = Q_STATE_CAST(&QHsm_top);
000008  e59f2158          LDR      r2,|L1.360|
00000c  e5802004          STR      r2,[r0,#4]
;;;89         me->temp.fun  = initial;
000010  e5801008          STR      r1,[r0,#8]
;;;90     }
000014  e12fff1e          BX       lr
;;;91     
                          ENDP

                  QHsm_init_ PROC
;;;102    */
;;;103    void QHsm_init_(QHsm * const me, QEvt const * const e) {
000018  e92d41f0          PUSH     {r4-r8,lr}
00001c  e24dd018          SUB      sp,sp,#0x18
000020  e1a04000          MOV      r4,r0
000024  e1a08001          MOV      r8,r1
;;;104        QStateHandler t = me->state.fun;
000028  e5946004          LDR      r6,[r4,#4]
;;;105        QState r;
;;;106        QS_CRIT_STAT_
;;;107    
;;;108        /** \pre the virtual pointer must be initialized, the top-most initial
;;;109        * transition must be initialized, and the initial transition must not
;;;110        * be taken yet.
;;;111        */
;;;112        Q_REQUIRE_ID(200, (me->vptr != (QMsmVtbl const *)0)
00002c  e5940000          LDR      r0,[r4,#0]
000030  e3500000          CMP      r0,#0
000034  0a000006          BEQ      |L1.84|
000038  e5940008          LDR      r0,[r4,#8]
00003c  e3500000          CMP      r0,#0
000040  0a000003          BEQ      |L1.84|
000044  e59f011c          LDR      r0,|L1.360|
000048  e1560000          CMP      r6,r0
00004c  1a000000          BNE      |L1.84|
000050  ea000002          B        |L1.96|
                  |L1.84|
000054  e3a010c8          MOV      r1,#0xc8
000058  e59f010c          LDR      r0,|L1.364|
00005c  ebfffffe          BL       Q_onAssert
                  |L1.96|
;;;113                          && (me->temp.fun != Q_STATE_CAST(0))
;;;114                          && (t == Q_STATE_CAST(&QHsm_top)));
;;;115    
;;;116        r = (*me->temp.fun)(me, e); /* execute the top-most initial transition */
000060  e1a01008          MOV      r1,r8
000064  e5942008          LDR      r2,[r4,#8]
000068  e1a00004          MOV      r0,r4
00006c  e1a0e00f          MOV      lr,pc
000070  e12fff12          BX       r2
000074  e1a07000          MOV      r7,r0
;;;117    
;;;118        /* the top-most initial transition must be taken */
;;;119        Q_ASSERT_ID(210, r == (QState)Q_RET_TRAN);
000078  e3570008          CMP      r7,#8
00007c  1a000000          BNE      |L1.132|
000080  ea000002          B        |L1.144|
                  |L1.132|
000084  e3a010d2          MOV      r1,#0xd2
000088  e59f00dc          LDR      r0,|L1.364|
00008c  ebfffffe          BL       Q_onAssert
                  |L1.144|
;;;120    
;;;121        QS_BEGIN_(QS_QEP_STATE_INIT, QS_priv_.smObjFilter, me)
;;;122            QS_OBJ_(me);           /* this state machine object */
;;;123            QS_FUN_(t);            /* the source state */
;;;124            QS_FUN_(me->temp.fun); /* the target of the initial transition */
;;;125        QS_END_()
;;;126    
;;;127        /* drill down into the state hierarchy with initial transitions... */
;;;128        do {
000090  e1a00000          MOV      r0,r0
                  |L1.148|
;;;129            QStateHandler path[QHSM_MAX_NEST_DEPTH_];
;;;130            int_fast8_t ip = (int_fast8_t)0; /* transition entry path index */
000094  e3a05000          MOV      r5,#0
;;;131    
;;;132            path[0] = me->temp.fun;
000098  e5940008          LDR      r0,[r4,#8]
00009c  e58d0000          STR      r0,[sp,#0]
;;;133            (void)QEP_TRIG_(me->temp.fun, QEP_EMPTY_SIG_);
0000a0  e59f10c8          LDR      r1,|L1.368|
0000a4  e5942008          LDR      r2,[r4,#8]
0000a8  e1a00004          MOV      r0,r4
0000ac  e1a0e00f          MOV      lr,pc
0000b0  e12fff12          BX       r2
;;;134            while (me->temp.fun != t) {
0000b4  ea00000d          B        |L1.240|
                  |L1.184|
;;;135                ++ip;
0000b8  e2855001          ADD      r5,r5,#1
;;;136                Q_ASSERT_ID(220, ip < (int_fast8_t)Q_DIM(path));
0000bc  e3550006          CMP      r5,#6
0000c0  aa000000          BGE      |L1.200|
0000c4  ea000002          B        |L1.212|
                  |L1.200|
0000c8  e3a010dc          MOV      r1,#0xdc
0000cc  e59f0098          LDR      r0,|L1.364|
0000d0  ebfffffe          BL       Q_onAssert
                  |L1.212|
;;;137                path[ip] = me->temp.fun;
0000d4  e5940008          LDR      r0,[r4,#8]
0000d8  e78d0105          STR      r0,[sp,r5,LSL #2]
;;;138                (void)QEP_TRIG_(me->temp.fun, QEP_EMPTY_SIG_);
0000dc  e59f108c          LDR      r1,|L1.368|
0000e0  e5942008          LDR      r2,[r4,#8]
0000e4  e1a00004          MOV      r0,r4
0000e8  e1a0e00f          MOV      lr,pc
0000ec  e12fff12          BX       r2
                  |L1.240|
0000f0  e5940008          LDR      r0,[r4,#8]            ;134
0000f4  e1500006          CMP      r0,r6                 ;134
0000f8  1affffee          BNE      |L1.184|
;;;139            }
;;;140            me->temp.fun = path[0];
0000fc  e59d0000          LDR      r0,[sp,#0]
000100  e5840008          STR      r0,[r4,#8]
;;;141    
;;;142            /* retrace the entry path in reverse (desired) order... */
;;;143            do {
000104  e1a00000          MOV      r0,r0
                  |L1.264|
;;;144                QEP_ENTER_(path[ip]); /* enter path[ip] */
000108  e1a00000          MOV      r0,r0
00010c  e79d2105          LDR      r2,[sp,r5,LSL #2]
000110  e59f105c          LDR      r1,|L1.372|
000114  e1a00004          MOV      r0,r4
000118  e1a0e00f          MOV      lr,pc
00011c  e12fff12          BX       r2
000120  e1a00000          MOV      r0,r0
;;;145                --ip;
000124  e2455001          SUB      r5,r5,#1
;;;146            } while (ip >= (int_fast8_t)0);
000128  e3550000          CMP      r5,#0
00012c  aafffff5          BGE      |L1.264|
;;;147    
;;;148            t = path[0]; /* current state becomes the new source */
000130  e59d6000          LDR      r6,[sp,#0]
;;;149    
;;;150            r = QEP_TRIG_(t, Q_INIT_SIG); /* execute initial transition */
000134  e59f103c          LDR      r1,|L1.376|
000138  e1a00004          MOV      r0,r4
00013c  e1a0e00f          MOV      lr,pc
000140  e12fff16          BX       r6
000144  e1a07000          MOV      r7,r0
;;;151    
;;;152    #ifdef Q_SPY
;;;153            if (r == (QState)Q_RET_TRAN) {
;;;154                QS_BEGIN_(QS_QEP_STATE_INIT, QS_priv_.smObjFilter, me)
;;;155                    QS_OBJ_(me);           /* this state machine object */
;;;156                    QS_FUN_(t);            /* the source state */
;;;157                    QS_FUN_(me->temp.fun); /* the target of the initial tran. */
;;;158                QS_END_()
;;;159            }
;;;160    #endif /* Q_SPY */
;;;161    
;;;162        } while (r == (QState)Q_RET_TRAN);
000148  e3570008          CMP      r7,#8
00014c  0affffd0          BEQ      |L1.148|
;;;163    
;;;164        QS_BEGIN_(QS_QEP_INIT_TRAN, QS_priv_.smObjFilter, me)
;;;165            QS_TIME_();    /* time stamp */
;;;166            QS_OBJ_(me);   /* this state machine object */
;;;167            QS_FUN_(t);    /* the new active state */
;;;168        QS_END_()
;;;169    
;;;170        me->state.fun = t; /* change the current active state */
000150  e5846004          STR      r6,[r4,#4]
;;;171        me->temp.fun  = t; /* mark the configuration as stable */
000154  e5846008          STR      r6,[r4,#8]
;;;172    }
000158  e28dd018          ADD      sp,sp,#0x18
00015c  e8bd41f0          POP      {r4-r8,lr}
000160  e12fff1e          BX       lr
;;;173    
                          ENDP

                  |L1.356|
                          DCD      vtbl
                  |L1.360|
                          DCD      QHsm_top
                  |L1.364|
                          DCD      Q_this_module_
                  |L1.368|
                          DCD      QEP_reservedEvt_
                  |L1.372|
                          DCD      QEP_reservedEvt_+0x4
                  |L1.376|
                          DCD      QEP_reservedEvt_+0xc

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

                  Q_this_module_
000000  7168736d          DCB      0x71,0x68,0x73,0x6d
000004  5f696e69          DCB      0x5f,0x69,0x6e,0x69
000008  00000000          DCB      0x00,0x00,0x00,0x00
                  vtbl
                          DCD      QHsm_init_
                          DCD      QHsm_dispatch_
