; generated by Component: ARM Compiler 5.04 update 1 (build 49) Tool: ArmCC [5040049]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\acdcwheel.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\acdcwheel.d --apcs=interwork -O0 --diag_suppress=9931 -I.\bombqmbsp -I..\..\..\..\..\..\..\CPU_Platforms\ARM\ARM7\MCB2300\include -I..\..\..\..\..\..\..\Framewworks\Quantum\qpc_5.3.1\qpc\ports\arm7\Keil -I..\..\..\..\..\..\..\Framewworks\Quantum\qpc_5.3.1\qpc\include -I.\src -I.\src\coffee -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\Philips -D__MICROLIB -DQM_TICK -DQM_ActiveObject --omf_browse=.\obj\acdcwheel.crf acdcwheel.c]
                          ARM

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_i
                          REQUIRE _printf_int_dec
                  get_ad_last_value PROC
;;;5      
;;;6      short get_ad_last_value() {
000000  e59f0098          LDR      r0,|L1.160|
;;;7      	return AD_last;
000004  e1d000f0          LDRSH    r0,[r0,#0]  ; AD_last
;;;8      }
000008  e12fff1e          BX       lr
;;;9      
                          ENDP

                  ADC_IRQHandler PROC
                  |L1.12|
;;;10     /* A/D IRQ: Executed when A/D Conversion is done                              */
;;;11     __irq void ADC_IRQHandler(void) {
00000c  e92d503f          PUSH     {r0-r5,r12,lr}
;;;12       AD_last = (AD0DR0 >> 6) & 0x3FF;      /* Read Conversion Result             */
000010  e59f008c          LDR      r0,|L1.164|
000014  e5900010          LDR      r0,[r0,#0x10]
000018  e59f1088          LDR      r1,|L1.168|
00001c  e0010320          AND      r0,r1,r0,LSR #6
000020  e59f1078          LDR      r1,|L1.160|
000024  e1c100b0          STRH     r0,[r1,#0]  ; AD_last
;;;13     	printf("%i", get_ad_last_value());
000028  ebfffffe          BL       get_ad_last_value
00002c  e1a04000          MOV      r4,r0
000030  e1a01004          MOV      r1,r4
000034  e28f0070          ADR      r0,|L1.172|
000038  ebfffffe          BL       __2printf
;;;14       VICVectAddr = 0;                      /* Acknowledge Interrupt              */
00003c  e3a00000          MOV      r0,#0
000040  e5000100          STR      r0,[r0,#-0x100]
;;;15     }
000044  e8bd503f          POP      {r0-r5,r12,lr}
000048  e25ef004          SUBS     pc,lr,#4
;;;16     
                          ENDP

                  AD_Wheel_Init PROC
;;;17     void AD_Wheel_Init(void )  {
00004c  e59f005c          LDR      r0,|L1.176|
;;;18     	PCONP        |= (1 << 12);                   /* Enable power to AD block    */
000050  e59000c4          LDR      r0,[r0,#0xc4]
000054  e3800a01          ORR      r0,r0,#0x1000
000058  e59f1050          LDR      r1,|L1.176|
00005c  e58100c4          STR      r0,[r1,#0xc4]
;;;19       PINSEL1       = 0x4000;                      /* AD0.0 pin function select   */
000060  e3a00901          MOV      r0,#0x4000
000064  e241181d          SUB      r1,r1,#0x1d0000
000068  e5810004          STR      r0,[r1,#4]
;;;20       AD0INTEN      = (1 <<  0);                   /* CH0 enable interrupt        */
00006c  e3a00001          MOV      r0,#1
000070  e0811780          ADD      r1,r1,r0,LSL #15
000074  e581000c          STR      r0,[r1,#0xc]
;;;21       AD0CR         = 0x00200301;                  /* Power up, PCLK/4, sel AD0.0 */
000078  e59f0034          LDR      r0,|L1.180|
00007c  e5810000          STR      r0,[r1,#0]
;;;22       VICVectAddr18 = (unsigned long)ADC_IRQHandler;/* Set Interrupt Vector       */
000080  e24f007c          ADR      r0,|L1.12|
000084  e3a01000          MOV      r1,#0
000088  e5010eb8          STR      r0,[r1,#-0xeb8]
;;;23       VICVectCntl18 = 14;                          /* use it for ADC Interrupt    */
00008c  e3a0000e          MOV      r0,#0xe
000090  e5010db8          STR      r0,[r1,#-0xdb8]
;;;24       VICIntEnable  = (1  << 18);                  /* Enable ADC Interrupt        */
000094  e3a00701          MOV      r0,#0x40000
000098  e5010ff0          STR      r0,[r1,#-0xff0]
;;;25     }
00009c  e12fff1e          BX       lr
;;;26     
                          ENDP

                  |L1.160|
                          DCD      AD_last
                  |L1.164|
                          DCD      0xe0034000
                  |L1.168|
                          DCD      0x000003ff
                  |L1.172|
0000ac  256900            DCB      "%i",0
0000af  00                DCB      0
                  |L1.176|
                          DCD      0xe01fc000
                  |L1.180|
                          DCD      0x00200301

                          AREA ||.data||, DATA, ALIGN=1

                  AD_last
000000  0000              DCB      0x00,0x00
