; generated by Component: ARM Compiler 5.04 update 1 (build 49) Tool: ArmCC [5040049]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\qf_act.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\qf_act.d --apcs=interwork -O0 --diag_suppress=9931 -I.\bombqmbsp -I..\..\..\..\..\..\..\CPU_Platforms\ARM\ARM7\MCB2300\include -I..\..\..\..\..\..\..\Framewworks\Quantum\qpc_5.3.1\qpc\ports\arm7\Keil -I..\..\..\..\..\..\..\Framewworks\Quantum\qpc_5.3.1\qpc\include -I.\src -I.\src\coffee -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\Philips -D__MICROLIB -DQM_TICK -DQM_ActiveObject --omf_browse=.\obj\qf_act.crf ..\..\..\..\..\..\..\Framewworks\Quantum\qpc_5.3.1\qpc\qf\source\qf_act.c]
                          ARM

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  QF_add_ PROC
;;;70     */
;;;71     void QF_add_(QActive * const a) {
000000  e92d4070          PUSH     {r4-r6,lr}
000004  e1a05000          MOV      r5,r0
;;;72         uint_fast8_t p = a->prio;
000008  e5954028          LDR      r4,[r5,#0x28]
;;;73         QF_CRIT_STAT_
;;;74     
;;;75         /** \pre the priority of the active object must not be zero and cannot
;;;76         * exceed the maximum #QF_MAX_ACTIVE. Also, the priority of the active
;;;77         * object must not be already in use. QF requires each active object to
;;;78         * have a __unique__ priority.
;;;79         */
;;;80         Q_REQUIRE_ID(100, ((uint_fast8_t)0 < p)
00000c  e3540000          CMP      r4,#0
000010  9a000006          BLS      |L1.48|
000014  e3540008          CMP      r4,#8
000018  8a000004          BHI      |L1.48|
00001c  e59f00ac          LDR      r0,|L1.208|
000020  e7900104          LDR      r0,[r0,r4,LSL #2]
000024  e3500000          CMP      r0,#0
000028  1a000000          BNE      |L1.48|
00002c  ea000002          B        |L1.60|
                  |L1.48|
000030  e3a01064          MOV      r1,#0x64
000034  e59f0098          LDR      r0,|L1.212|
000038  ebfffffe          BL       Q_onAssert
                  |L1.60|
;;;81                            && (p <= (uint_fast8_t)QF_MAX_ACTIVE)
;;;82                   && (QF_active_[p] == (QActive *)0));
;;;83     
;;;84         QF_CRIT_ENTRY_();
00003c  ef0000fe          SVC      #0xfe
;;;85     
;;;86         QF_active_[p] = a; /* register the active object at this priority */
000040  e59f0088          LDR      r0,|L1.208|
000044  e7805104          STR      r5,[r0,r4,LSL #2]
;;;87     
;;;88         QS_BEGIN_NOCRIT_(QS_QF_ACTIVE_ADD, QS_priv_.aoObjFilter, a)
;;;89             QS_TIME_();         /* timestamp */
;;;90             QS_OBJ_(a);         /* the active object */
;;;91             QS_U8_((uint8_t)p); /* the priority of the active object */
;;;92         QS_END_NOCRIT_()
;;;93     
;;;94         QF_CRIT_EXIT_();
000048  ef0000ff          SVC      #0xff
;;;95     }
00004c  e8bd4070          POP      {r4-r6,lr}
000050  e12fff1e          BX       lr
;;;96     
                          ENDP

                  QF_remove_ PROC
;;;111    */
;;;112    void QF_remove_(QActive const * const a) {
000054  e92d4070          PUSH     {r4-r6,lr}
000058  e1a05000          MOV      r5,r0
;;;113        uint_fast8_t p = a->prio;
00005c  e5954028          LDR      r4,[r5,#0x28]
;;;114        QF_CRIT_STAT_
;;;115    
;;;116        /** \pre the priority of the active object must not be zero and cannot
;;;117        * exceed the maximum #QF_MAX_ACTIVE. Also, the priority of the active
;;;118        * object must be already registered with the framework.
;;;119        */
;;;120        Q_REQUIRE_ID(200, ((uint_fast8_t)0 < p)
000060  e3540000          CMP      r4,#0
000064  9a000006          BLS      |L1.132|
000068  e3540008          CMP      r4,#8
00006c  8a000004          BHI      |L1.132|
000070  e59f0058          LDR      r0,|L1.208|
000074  e7900104          LDR      r0,[r0,r4,LSL #2]
000078  e1500005          CMP      r0,r5
00007c  1a000000          BNE      |L1.132|
000080  ea000002          B        |L1.144|
                  |L1.132|
000084  e3a010c8          MOV      r1,#0xc8
000088  e59f0044          LDR      r0,|L1.212|
00008c  ebfffffe          BL       Q_onAssert
                  |L1.144|
;;;121                           && (p <= (uint_fast8_t)QF_MAX_ACTIVE)
;;;122                  && (QF_active_[p] == a));
;;;123    
;;;124        QF_CRIT_ENTRY_();
000090  ef0000fe          SVC      #0xfe
;;;125    
;;;126        QF_active_[p] = (QActive *)0;  /* free-up the priority level */
000094  e3a00000          MOV      r0,#0
000098  e59f1030          LDR      r1,|L1.208|
00009c  e7810104          STR      r0,[r1,r4,LSL #2]
;;;127    
;;;128        QS_BEGIN_NOCRIT_(QS_QF_ACTIVE_REMOVE, QS_priv_.aoObjFilter, a)
;;;129            QS_TIME_();         /* timestamp */
;;;130            QS_OBJ_(a);         /* the active object */
;;;131            QS_U8_((uint8_t)p); /* the priority of the active object */
;;;132        QS_END_NOCRIT_()
;;;133    
;;;134        QF_CRIT_EXIT_();
0000a0  ef0000ff          SVC      #0xff
;;;135    }
0000a4  e8bd4070          POP      {r4-r6,lr}
0000a8  e12fff1e          BX       lr
;;;136    
                          ENDP

                  QF_bzero PROC
;;;162    */
;;;163    void QF_bzero(void * const start, uint_fast16_t len) {
0000ac  e1a02000          MOV      r2,r0
;;;164        uint8_t *ptr = (uint8_t *)start;
;;;165        while (len != (uint_fast16_t)0) {
0000b0  ea000003          B        |L1.196|
                  |L1.180|
;;;166            *ptr = (uint8_t)0;
0000b4  e3a03000          MOV      r3,#0
0000b8  e5c23000          STRB     r3,[r2,#0]
;;;167            QF_PTR_INC_(ptr);
0000bc  e2822001          ADD      r2,r2,#1
;;;168            --len;
0000c0  e2411001          SUB      r1,r1,#1
                  |L1.196|
0000c4  e3510000          CMP      r1,#0                 ;165
0000c8  1afffff9          BNE      |L1.180|
;;;169        }
;;;170    }
0000cc  e12fff1e          BX       lr
;;;171    
                          ENDP

                  |L1.208|
                          DCD      QF_active_
                  |L1.212|
                          DCD      Q_this_module_

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  QF_active_
                          %        36

                          AREA ||.constdata||, DATA, READONLY, ALIGN=0

                  Q_this_module_
000000  71665f61          DCB      0x71,0x66,0x5f,0x61
000004  637400            DCB      0x63,0x74,0x00
